<?xml version = "1.0" encoding = "UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
 	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd" xmlns:aop="http://www.springframework.org/schema/aop">
    
    <context:annotation-config />
    
    <bean class="com.softwareplumbers.dms.rest.server.sql.Schema" scope="singleton">
        
        <property name="DropScript" >
            <value>
                DROP VIEW IF EXISTS VIEW_FOLDERS;
                DROP VIEW IF EXISTS VIEW_LINKS;
                DROP VIEW IF EXISTS VIEW_DOCUMENTS;
                DROP TABLE IF EXISTS FOLDERS;
                DROP TABLE IF EXISTS DOCUMENTS;
                DROP TABLE IF EXISTS VERSIONS;
                DROP TABLE IF EXISTS LINKS;
                DROP TABLE IF EXISTS NODES;
            </value>
        </property>
        
        <property name="CreateScript">
            <value>
                CREATE TABLE NODES (
                    ID UUID PRIMARY KEY,
                    PARENT_ID UUID,
                    NAME VARCHAR(255),
                    TYPE VARCHAR(16),
                    DELETED BOOLEAN DEFAULT FALSE
                );

                CREATE TABLE LINKS (
                    ID UUID PRIMARY KEY,
                    DOCUMENT_ID UUID,
                    VERSION_ID UUID,
                    VERSIONED BOOLEAN
                );
                
                CREATE TABLE DOCUMENTS(
                    ID UUID PRIMARY KEY,
                    LATEST_VERSION UUID
                );

                CREATE TABLE VERSIONS (
                    DOCUMENT_ID UUID,
                    ID UUID PRIMARY KEY,
                    MEDIA_TYPE VARCHAR(255),
                    LENGTH BIGINT,
                    DIGEST BINARY(32),
                    CREATED TIMESTAMP,
                    METADATA CLOB
                );

                CREATE TABLE FOLDERS (
                    ID UUID PRIMARY KEY,
                    STATE VARCHAR(16),
                    METADATA CLOB
                );


            </value>
        </property>
        
        <property name="UpdateScript">
            <value>
                
                CREATE OR REPLACE VIEW VIEW_DOCUMENTS AS SELECT
                    VERSIONS.DOCUMENT_ID AS ID,
                    VERSIONS.ID AS VERSION_ID,
                    VERSIONS.MEDIA_TYPE AS MEDIA_TYPE,
                    VERSIONS.LENGTH AS LENGTH,
                    VERSIONS.DIGEST AS DIGEST,
                    VERSIONS.CREATED AS CREATED,
                    VERSIONS.METADATA AS METADATA,                    
                    NVL2(DOCUMENTS.ID,TRUE,FALSE) AS LATEST
                FROM
                    VERSIONS
                LEFT JOIN
                    DOCUMENTS ON (VERSIONS.ID = DOCUMENTS.LATEST_VERSION)
                ;
                           
                CREATE OR REPLACE VIEW VIEW_LINKS AS SELECT
                    NODES.ID AS ID,
                    NODES.PARENT_ID AS PARENT_ID,
                    NODES.NAME AS NAME,
                    NODES.DELETED AS DELETED,
                    LINKS.VERSIONED AS VERSIONED,
                    VERSIONS.DOCUMENT_ID AS DOCUMENT_ID,
                    VERSIONS.ID AS VERSION_ID,
                    VERSIONS.MEDIA_TYPE AS MEDIA_TYPE,
                    VERSIONS.LENGTH AS LENGTH,
                    VERSIONS.DIGEST AS DIGEST,
                    VERSIONS.CREATED AS CREATED,
                    VERSIONS.METADATA AS METADATA
                FROM
                    NODES 
                INNER JOIN
                    LINKS ON (NODES.ID = LINKS.ID)
                INNER JOIN
                    VERSIONS ON (LINKS.VERSION_ID = VERSIONS.ID)
                WHERE
                    LINKS.VERSIONED = TRUE
                UNION ALL SELECT
                    NODES.ID AS ID,
                    NODES.PARENT_ID AS PARENT_ID,
                    NODES.NAME AS NAME,
                    NODES.DELETED AS DELETED,
                    LINKS.VERSIONED AS VERSIONED,
                    VIEW_DOCUMENTS.ID AS DOCUMENT_ID,
                    VIEW_DOCUMENTS.VERSION_ID AS VERSION_ID,
                    VIEW_DOCUMENTS.MEDIA_TYPE AS MEDIA_TYPE,
                    VIEW_DOCUMENTS.LENGTH AS LENGTH,
                    VIEW_DOCUMENTS.DIGEST AS DIGEST,
                    VIEW_DOCUMENTS.CREATED AS CREATED,
                    VIEW_DOCUMENTS.METADATA AS METADATA
                FROM
                    NODES 
                INNER JOIN
                    LINKS ON (NODES.ID = LINKS.ID)
                INNER JOIN
                    VIEW_DOCUMENTS ON (LINKS.DOCUMENT_ID = VIEW_DOCUMENTS.ID)
                WHERE
                    LINKS.VERSIONED = FALSE AND VIEW_DOCUMENTS.LATEST = TRUE
                ;

                CREATE OR REPLACE VIEW VIEW_FOLDERS AS SELECT
                    NODES.ID AS ID,
                    NODES.PARENT_ID AS PARENT_ID,
                    NODES.NAME AS NAME,
                    NODES.DELETED AS DELETED,
                    FOLDERS.STATE AS STATE,
                    FOLDERS.METADATA AS METADATA
                FROM
                    NODES 
                INNER JOIN
                    FOLDERS ON (NODES.ID = FOLDERS.ID)         
                ;   
                
                CREATE UNIQUE INDEX NODE_NAME ON NODES (PARENT_ID, NAME);
                CREATE INDEX VERSION_BY_DOCUMENT ON VERSIONS(DOCUMENT_ID);
             
            </value>
        </property>

    </bean>
    
    <bean class="com.softwareplumbers.dms.rest.server.sql.Operations" scope="singleton">
        
        <property name="FetchPathToId">
            <value>
                WITH LINK(ID,NAME) AS (
                    SELECT ID,NAME 
                    FROM NODES 
                    WHERE PARENT_ID = '00000000-0000-0000-0000-000000000000' 
                    UNION ALL SELECT 
                        NODES.ID, 
                        IFNULL(LINK.NAME || '/', '') || NODES.NAME 
                    FROM LINK 
                    INNER JOIN NODES ON LINK.ID = NODES.PARENT_ID
                ) 
                SELECT NAME FROM LINK WHERE ID = ?
            </value>
        </property>
        
        <property name="FetchLastNameLike" value="SELECT MAX(NAME) FROM NODES WHERE ID=? AND NAME LIKE ?"/>

        <property name="CreateDocument">
            <value>
                INSERT INTO DOCUMENTS (ID, LATEST_VERSION) VALUES (?,?)
            </value>
        </property>
        <property name="CreateVersion">
            <value>
                INSERT INTO VERSIONS 
                    (DOCUMENT_ID, ID, MEDIA_TYPE, LENGTH, DIGEST, METADATA, CREATED) 
                VALUES (?,?,?,?,?,?, CURRENT_TIMESTAMP)
            </value>
        </property>
        
        <property name="CreateNode">
            <value>
                INSERT INTO NODES (ID, PARENT_ID, NAME, TYPE, DELETED) VALUES (?,?,?,?,FALSE) 
            </value>
        </property>
        
        <property name="CreateFolder">
            <value>
                INSERT INTO FOLDERS (ID, STATE, METADATA) VALUES (?,?,?)
            </value>
        </property>
        
        <property name="CopyFolder">
            <value>
                INSERT INTO FOLDERS (ID, STATE, METADATA) 
                SELECT ?, STATE, METADATA
                FROM FOLDERS
                WHERE ID = ?
            </value>
        </property>
        
        <property name="CreateLink">
            <value>
                INSERT INTO LINKS (ID, DOCUMENT_ID, VERSION_ID, VERSIONED) VALUES (?,?,?,?)
            </value>
        </property>
        
        <property name="CopyLink">
            <value>
                INSERT INTO LINKS (ID, DOCUMENT_ID, VERSION_ID, VERSIONED) 
                SELECT ?, DOCUMENT_ID, VERSION_ID, VERSIONED
                FROM LINKS
                WHERE ID = ?                
            </value>
        </property>
        <property name="UpdateDocument">
            <value>
                UPDATE DOCUMENTS SET LATEST_VERSION = ? WHERE ID = ?
            </value>
        </property>        
        <property name="UpdateLink">
            <value>
                UPDATE LINKS SET DOCUMENT_ID=?, VERSION_ID=?, VERSIONED=? WHERE LINKS.ID=?
            </value>
        </property>
        
        <property name="UpdateFolder">
            <value>
                UPDATE FOLDERS SET STATE=?, METADATA=? WHERE FOLDERS.ID=?
            </value>
        </property>
        
        <property name="LockVersions">
            <value>
                UPDATE LINKS 
                SET VERSIONED=TRUE, 
                    VERSION_ID=(
                        SELECT LATEST_VERSION 
                        FROM DOCUMENTS 
                        WHERE DOCUMENTS.ID=LINKS.DOCUMENT_ID
                    ) 
                WHERE LINKS.ID IN (
                    SELECT NODES.ID 
                    FROM NODES 
                    WHERE NODES.PARENT_ID=?
                )
            </value>
        </property>
        
        <property name="UnlockVersions">
            <value>
                UPDATE LINKS 
                SET VERSIONED=FALSE 
                WHERE LINKS.ID IN (
                    SELECT NODES.ID 
                    FROM NODES 
                    WHERE NODES.PARENT_ID=?
                )
            </value>
        </property>
        
        <property name="FetchChildren">
            <value>
                SELECT 
                    ID, 
                    PARENT_ID,
                    NAME,
                    DELETED, 
                    TYPE,
                    NAME AS PATH
                FROM
                    NODES
                WHERE PARENT_ID = ?
            </value>
        </property>
        
        <property name="DeleteObject">
            <value>
                UPDATE NODES SET DELETED=TRUE WHERE ID=?
            </value>
        </property>
        
        <property name="DeleteDocumentById">
            <value>
                UPDATE NODES SET DELETED=TRUE 
                WHERE PARENT_ID=? 
                AND EXISTS (
                    SELECT ID FROM LINKS 
                    WHERE LINKS.ID = NODES.ID AND LINKS.DOCUMENT_ID = ?
                )
            </value>
        </property>

    </bean>
    
    <bean class="com.softwareplumbers.dms.rest.server.sql.Templates" scope="singleton"> 
        <property name="FetchDocumentLink">
            <value>
            SELECT 
                T0.ID, 
                T0.PARENT_ID,
                T0.NAME,
                T0.DELETED, 
                T0.VERSIONED, 
                T0.DOCUMENT_ID, 
                T0.VERSION_ID,
                T0.CREATED,
                T0.MEDIA_TYPE,
                T0.LENGTH,
                T0.DIGEST,
                T0.METADATA,
                !{0} AS PATH
            !{1}
            </value>
        </property>
        <property name="FetchFolder">
            <value>
                SELECT 
                    T0.ID, 
                    T0.PARENT_ID,
                    T0.NAME,
                    T0.DELETED, 
                    T0.STATE,
                    T0.METADATA,
                    !{0} AS PATH
                !{1}
            </value>
        </property>
        <property name="FetchInfo">
            <value>
                SELECT 
                    T0.ID, 
                    T0.PARENT_ID,
                    T0.NAME,
                    T0.DELETED, 
                    T0.TYPE,
                    !{0} AS PATH
                !{1}
            </value>
        </property>
        <property name="FetchDocument">
            <value>
                SELECT 
                    ID, 
                    VERSION_ID,
                    CREATED,
                    MEDIA_TYPE,
                    LENGTH,
                    DIGEST,
                    METADATA
                !{0}
            </value>
        </property>
    </bean>

</beans>
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE")
    }
}

String propValue(String propName, String defValue) {
    (project.hasProperty(propName) && project.getProperty(propName)) ? project.getProperty(propName) : defValue
}

version = propValue("ci_version","master");
group = "com.softwareplumbers.oss"

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'dms-rest-server-core'
    classifier = 'boot'
}

jar {
	enabled = true
	// exclude services.xml from the library (because when we include this as a library we will specify our own services.xml)
	exclude("services.xml")
}

repositories {
	maven { url propValue("proxyMavenCentral", "https://repo.maven.apache.org/maven2/") }
    maven { url 'https://nexus.softwareplumbers.com/repository/maven-oss' }
}

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "https://nexus.softwareplumbers.com/repository/maven-oss") {
      	authentication(userName: propValue("mavenUploadUser",""), password: propValue("mavenUploadPassword",""))
      }
    }
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-jersey")
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-processing', version: '2.27'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.27'
    compile group: 'com.softwareplumbers.oss', name:'abstract-query-java', version:'0.1.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    testCompile("org.springframework.boot:spring-boot-starter-test")
}
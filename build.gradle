buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.19.RELEASE")
    }
}

/*
plugins {
  id "org.jdrupes.mdoclet" version "1.0.3"
}
*/

String propValue(String propName, String defValue) {
    (project.hasProperty(propName) && project.getProperty(propName)) ? project.getProperty(propName) : defValue
}

version = propValue("ci_version","master");
group = "com.softwareplumbers.oss"

def SNAPSHOT_BUILDS = ["master"];

if (SNAPSHOT_BUILDS.contains(version)) { version = version + "-SNAPSHOT" };

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootRun {
	systemProperties = System.properties
}

test {
	systemProperties = System.properties
	testLogging {
        events "passed", "skipped", "failed"
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

task bootJar1(type: Jar, dependsOn: classes) {
  classifier 'standalone'
  from sourceSets.main.output
}

bootRepackage  {
	enabled=false
}

task repackageTask1(type: BootRepackage, dependsOn: bootJar1) {
	classifier='standalone'
	withJarTask='bootJar1'
}

jar {
	enabled = true
	// exclude services.xml from the library (because when we include this as a library we will specify our own services.xml)
	exclude("services.xml","**/JerseyConfig.class","**/Application.class")
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier 'sources'
	from sourceSets.main.allSource
}

task testsJar(type: Jar, dependsOn: classes) {
    classifier 'tests'
    from sourceSets.test.output
}

assemble {
	dependsOn repackageTask1
}

artifacts {
    archives sourcesJar 
    archives bootJar1
    archives testsJar
}

test {
    systemProperty "spring.profiles.active", "test"
    testLogging {
        events "passed", "skipped", "failed"
    }
}

repositories {
	maven { url propValue("proxyMavenCentral", "https://repo.maven.apache.org/maven2/") }
    maven { url 'https://nexus.softwareplumbers.com/repository/maven-oss' }
    maven { url 'https://nexus.softwareplumbers.com/repository/maven-oss-snapshot' }
}

uploadArchives {
  dependsOn bootRepackage
  repositories {
    mavenDeployer {
      repository(url: "https://nexus.softwareplumbers.com/repository/maven-oss") {
      	authentication(userName: propValue("mavenUploadUser",""), password: propValue("mavenUploadPassword",""))
      }
      snapshotRepository(url: "https://nexus.softwareplumbers.com/repository/maven-oss-snapshot") {
      	authentication(userName: propValue("mavenUploadUser",""), password: propValue("mavenUploadPassword",""))
      }
    }
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
     dependencies {
          imports {
          	mavenBom 'org.keycloak.bom:keycloak-adapter-bom:4.0.0.Final'
     	  }
     }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-jersey")
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-processing', version: '2.25.1'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.25.1'
    compile group: 'com.softwareplumbers.oss', name:'qualified-name', version:'master-SNAPSHOT'
    compile group: 'com.softwareplumbers.oss', name:'abstract-pattern', version:'master-SNAPSHOT'
    compile group: 'com.softwareplumbers.oss', name:'abstract-query-java', version:'master-SNAPSHOT'
    compile group: 'com.softwareplumbers.oss', name:'key-manager', version: 'master-SNAPSHOT'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.opensaml', name: 'opensaml-saml-api', version: '3.3.0'
    compile group: 'org.opensaml', name: 'opensaml-core', version: '3.3.0'
    compile group: 'io.jsonwebtoken', name: 'jjwt-api', version:'0.10.5'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.54'
    compile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.54'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.10.5'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.10.5'
    runtime group: 'org.glassfish', name: 'javax.json', version: '1.1.2'
    compile group: 'org.opensaml', name: 'opensaml-saml-impl', version: '3.3.0'
    compile group: 'org.apache.tika', name:'tika-core', version:'2.0-SNAPSHOT'
    compile group: 'org.apache.tika', name:'tika-parser-office-module', version:'2.0-SNAPSHOT'
    compile group: 'org.apache.tika', name:'tika-parser-web-module', version:'2.0-SNAPSHOT'
    compile group: 'org.apache.tika', name:'tika-parser-text-module', version:'2.0-SNAPSHOT'
    
    testCompile("org.springframework.boot:spring-boot-starter-test")
}